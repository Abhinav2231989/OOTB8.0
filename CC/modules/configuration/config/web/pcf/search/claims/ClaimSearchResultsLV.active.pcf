<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <!-- This file automatically generated from lv_claim.xml -->
  <ListViewPanel
    id="ClaimSearchResultsLV"
    mode="active">
    <Require
      name="claimSearchResults"
      type="search.ClaimSearchResults"/>
    <ExposeIterator
      flags="RetrievableClaim"
      valueType="com.guidewire.cc.domain.claim.ArchivedClaimCompatible"
      widget="ClaimSearchResultsIterator"/>
    <Require
      name="ClaimSearchCriteria"
      type="ClaimSearchCriteria"/>
    <Variable
      initialValue="getClaimSearchViewList()//claimSearchResults == null ? null : claimSearchResults.getActiveClaimSearchResults() as ClaimSearchViewQuery"
      name="ClaimSearchViewList"
      recalculateOnRefresh="true"
      type="java.util.List &lt;ClaimSearchView&gt;"/>
    <Variable
      initialValue="User.util.CurrentUser"
      name="CurrentUser"
      type="User"/>
    <RowIterator
      editable="false"
      elementName="ClaimSearchView"
      hasCheckBoxes="true"
      id="ClaimSearchResultsIterator"
      pickValue="ClaimSearchView"
      value="ClaimSearchViewList">
      <Variable
        initialValue="ClaimSearchView.getClaimantNames()"
        name="claimantList"
        type="String[]"/>
      <ToolbarFlag
        condition="false"
        name="RetrievableClaim"/>
      <Row>
        <Cell
          icon="&quot;claim_flag.png&quot;"
          iconLabel="displaykey.LV.Claim.Flagged.Tooltip"
          id="Flagged"
          printWidth="0.04"
          sortBy="ClaimSearchView.Flagged"
          sortOrder="1"
          tooltip="displaykey.LV.Claim.Flagged.Tooltip"
          value="ClaimSearchView.CurrentlyFlagged"/>
        <Cell
          action="ClaimForward.go(ClaimSearchView.Claim)"
          id="ClaimNumber"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.ID"
          printWidth="0.12"
          sortOrder="3"
          value="ClaimSearchView.ClaimNumber"/>
        <Cell
          id="Insured"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.Insured"
          printWidth="0.14"
          value="ClaimSearchView.InsuredDenorm"/>
        <Cell
          id="PolicyID"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.PolicyID"
          printWidth="0"
          value="ClaimSearchView.PolicyNumber"/>
        <Cell
          id="InjuredWorker"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.InjuredWorker"
          printWidth="0.14"
          value="ClaimSearchView.ClaimantDenorm"
          visible="(CurrentUser.LossType == LossType.TC_WC)"/>
        <LinkCell
          id="Claimant"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.Claimant"
          printWidth="0.14"
          visible="(CurrentUser.LossType != LossType.TC_WC)">
          <LinkIterator
            elementName="claimantName"
            id="ClaimantName"
            value="claimantList">
            <Link
              id="Claimant"
              label="claimantName"/>
            <Link
              id="ClaimantSeperator"
              label="displaykey.Web.Claim.Claimant.Seperator"
              visible="claimantList.length &gt; 1 and claimantName != claimantList[claimantList.length - 1]"/>
          </LinkIterator>
        </LinkCell>
        <Cell
          id="LossDate"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.LossDate"
          printWidth="0.09"
          value="ClaimSearchView.LossDate"/>
        <Cell
          id="Assignee"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.Assignee"
          printWidth="0.14"
          sortBy="ClaimSearchView.AssignmentStatus,ClaimSearchView.AssignedUser,ClaimSearchView.AssignedQueue"
          value="ClaimSearchView.AssigneeDisplayString"/>
        <Cell
          id="Status"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.Status"
          printWidth="0.06"
          value="ClaimSearchView.State"/>
        <Cell
          enableSort="false"
          formatType="currency"
          id="RemainingReserves"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.RemainingReserves"
          printWidth="0.09"
          value="ClaimSearchView.RemainingReserves"/>
        <Cell
          enableSort="false"
          formatType="currency"
          id="FuturePayments"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.FuturePayments"
          printWidth="0.09"
          value="ClaimSearchView.FuturePayments"/>
        <Cell
          enableSort="false"
          formatType="currency"
          id="TotalPayments"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.TotalPayments"
          printWidth="0.09"
          value="ClaimSearchView.TotalPayments"/>
        <Cell
          id="NoticeDate"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.NoticeDate"
          value="ClaimSearchView.ReportedDate"
          visible="print.PrintUtil.isPrintingCSV()"/>
        <Cell
          id="AssignedGroup"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.AssignedGroup"
          value="ClaimSearchView.AssignedGroup"
          visible="print.PrintUtil.isPrintingCSV()"/>
        <Cell
          id="LOBCode"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.LOBCode"
          value="ClaimSearchView.LOBCode"
          visible="print.PrintUtil.isPrintingCSV()"/>
        <Cell
          id="StateOfJurisdiction"
          label="displaykey.LV.Claim.ClaimSearchResults.Claims.StateOfJurisdiction"
          value="ClaimSearchView.JurisdictionState"
          visible="print.PrintUtil.isPrintingCSV()"/>
        <Cell
          id="AssociationClaim"
          label="&quot;Assoc claim&quot;"
          value="ClaimSearchView.Claim.associationDetails()"
          visible="true"/>
      </Row>
    </RowIterator>
    <Code><![CDATA[function getClaimSearchViewList() : java.util.List <ClaimSearchView>
{
  if(claimSearchResults != null) {
    var searchViewResults = claimSearchResults.getActiveClaimSearchResults() //as java.util.List <ClaimSearchView>//ClaimSearchViewQuery
    var results = filterTPA(searchViewResults)

    var filteredResults : java.util.List <ClaimSearchView>
    filteredResults = results
    if(ClaimSearchCriteria.MatterStatus != null){
      if(ClaimSearchCriteria.MatterStatus == MatterState.TC_OPEN){
        print("Open")
        filteredResults = results.where( \ elt -> !elt.Claim.Matters.IsEmpty and elt.Claim.Matters.where( \ elt1 -> elt1.Closed) != null)
        print(filteredResults.Count)
      }else if(ClaimSearchCriteria.MatterStatus == MatterState.TC_CLOSED){
        filteredResults = results.where( \ elt -> !elt.Claim.Matters.IsEmpty and elt.Claim.Matters.where( \ elt1 -> elt1.Closed) == null)
        print("Closed")
      } else if(ClaimSearchCriteria.MatterStatus == MatterState.TC_OPENCLOSE){
        filteredResults = results.where( \ elt -> !elt.Claim.Matters.IsEmpty)
        print("Openclosed")
      }
    }
    

    return filteredResults
  } else {
    return null
  }
}

public static function filterTPA(results: ClaimSearchViewQuery): java.util.List <ClaimSearchView> {
  
  var filteredResults = new java.util.ArrayList <ClaimSearchView> ()
  for(claimView in results) {
    
    if(User.util.CurrentUser.AllGroups.contains(claimView.Claim.AssignedGroup) and
        results.hasMatch(\elt -> elt.Claim.AssignedGroup == claimView.AssignedGroup and elt.Claim == claimView.Claim)) {
      filteredResults.add(claimView)
    }
  }
  return filteredResults
}]]></Code>
  </ListViewPanel>
</PCF>